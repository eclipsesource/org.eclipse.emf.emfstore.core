name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  checks: write


jobs:
  build:
    timeout-minutes: 60

    # Use 20.04 because it has gtk2 available to install
    runs-on: ubuntu-20.04

    env:
      # DISPLAY: :0
      EMFSTORE_TEST_SERVER_ROOT_DIR: ${{ github.workspace }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Set up test files
      run: |
        echo $EMFSTORE_TEST_SERVER_ROOT_DIR
        mkdir -p $EMFSTORE_TEST_SERVER_ROOT_DIR/profiles/default_test/conf/
        cat <<EOT >> $EMFSTORE_TEST_SERVER_ROOT_DIR/profiles/default_test/conf/es.properties
        emfstore.startup.post.loadlistener=true
        emfstore.keystore.certificate.type=SunX509
        emfstore.accesscontrol.authentication.superuser.password.hash=f262c3daf9b9c8fd380bdf34a415ee01c38e423d956d4f9c732273cf51264783787415c3b6d8701f3416735a31b06b8330e0be0d17ae5361ef83de320f17ba84
        emfstore.accesscontrol.authentication.superuser.password.salt=8a0InZ2yZMss65zHJrdhOXU6CqF8EeFncdv7V29ZO4qD565i5deWWXIi7aRkYwbY2BWamdOYQGqoZeZiJHZ0BH1mteMIhu3eIG5D2twfVQtjetvf8kiLOMwnYDsk4HPq
        emfstore.keystore.alias=emfstoreServer
        emfstore.accesscontrol.authentication.policy=spfv
        emfstore.acceptedversions=any
        emfstore.validation.level=7
        emfstore.validation.exclude=
        emfstore.connection.rmi.encryption=true
        emfstore.startup.loadlistener=false
        emfstore.keystore.cipher.algorithm=RSA
        emfstore.keystore.password=123456
        emfstore.connection.xmlrpc.port=8080
        emfstore.validation=true
        emfstore.persistence.version.projectstate.everyxversions=50
        emfstore.accesscontrol.authentication.superuser=super
        emfstore.accesscontrol.session.timeout=1800000
        EOT
        cat $EMFSTORE_TEST_SERVER_ROOT_DIR/profiles/default_test/conf/es.properties
    # - name: Setup xvfb (Linux)
    #   if: runner.os == 'Linux'
    #   run: |
    #     # install swt
    #     sudo apt-get install -y libswt-gtk-4-java
    #     sudo ls -la ~/.swt/lib/linux/x86_64
    #     ls -la /home/runner/.swt/lib/linux/x86_64
    #     sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
    #     # start xvfb in the background
    #     sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    #     #sudo metacity --replace --sm-disable &
    - name: Install GTK 2 for SWT
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk2.0-0
    - name: Build with Maven
      uses: GabrielBB/xvfb-action@86d97bde4a65fe9b290c0b3fb92c2c4ed0e5302d
      timeout-minutes: 30
      with:
       run: mvn clean verify -X -Dcheckstyle.skip -f releng/emfstore-parent --no-transfer-progress
    - name: Archive test workspace logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-logs
        path: tests/*/target/work/data/.metadata/.log
    - name: Publish JUnit Test Report
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: '**/TEST-*.xml'
